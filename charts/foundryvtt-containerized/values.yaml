# Default values for foundryvtt-containerized.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  repository: pgschk/foundryvtt-containerized
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# foundryVTTDownloadURL specifies the timed download URL you obtained through FoundryVTT.com
foundryVTTDownloadURL: ""

# persistence contains settings regarding the data persistence
persistence:
  enabled: true
  # dataSize is the claim size for FoundryVTT data
  dataSize: 20Gi
  # installSize is the claim size for the FoundryVTT installation
  installSize: 2Gi

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  # runAsNonRoot: true
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: foundryvtt-containerized.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: foundryvtt-containerized-tls
  #    hosts:
  #      - foundryvtt-containerized.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
